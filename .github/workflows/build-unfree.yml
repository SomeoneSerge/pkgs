name: "nix-build --arg cudaSupport true"
on:
  pull_request:
  push:
    branches:
      - master
      - unfree
  schedule:
    - cron:  '50 6 * * *'
  workflow_dispatch:
jobs:
  nix-build:
    strategy:
      fail-fast: false
      matrix:
        nurRepo:
          - some-pkgs
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install nix
      uses: cachix/install-nix-action@v22
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
        install_url: https://releases.nixos.org/nix/nix-2.9.1/install
        nix_path: "${{ matrix.nixPath }}"
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Consume the read-only free cachix
      uses: cachix/cachix-action@v12
      with:
        name: some-unfree
    - name: Consume read-only cuda-maintainers cachix
      uses: cachix/cachix-action@v12
      with:
        name: cuda-maintainers
    - name: Setup writeable unfree cachix
      uses: cachix/cachix-action@v12
      with:
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN_UNFREE }}'
        name: some-unfree
    - uses: DeterminateSystems/magic-nix-cache-action@v2
    - name: Build nix packages
      run: nix shell -f 'https://github.com/Mic92/nix-build-uncached/archive/refs/tags/v1.1.2.tar.gz' -c nix-build-uncached -build-flags -L ci.nix -A cacheOutputs --keep-going
    - name: Trigger NUR update
      # Don't replace <YOUR_REPO_NAME> here!
      if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
      run: curl -XPOST "https://nur-update.herokuapp.com/update?repo=${{ matrix.nurRepo }}"
